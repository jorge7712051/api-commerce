generator client {
  provider = "prisma-client-js"
 binaryTargets = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  Int       @id @default(autoincrement())
  nombre              String
  correoElectronico   String    @unique
  contrasena          String
  rol                 Rol
  comerciantesActualiza Comerciante[] @relation("UsuarioComerciante")
  establecimientosActualiza Establecimiento[] @relation("UsuarioEstablecimiento")
  createdAt           DateTime @default(now())
}

model Comerciante {
  id                Int       @id @default(autoincrement())
  nombre            String
  municipio         String
  telefono          String?
  correoElectronico String?
  fechaRegistro     DateTime @default(now())
  estado            Estado
  fechaActualizacion DateTime @updatedAt
  usuarioActualizacionId Int
  usuarioActualizacion   Usuario  @relation("UsuarioComerciante", fields: [usuarioActualizacionId], references: [id])
  establecimientos   Establecimiento[]
}

model Establecimiento {
  id                Int       @id @default(autoincrement())
  nombre            String
  ingresos          Decimal   @db.Decimal(10,2)
  numeroEmpleados   Int
  comercianteId     Int
  comerciante       Comerciante @relation(fields: [comercianteId], references: [id], onDelete: Cascade)
  fechaActualizacion DateTime @updatedAt
  usuarioActualizacionId Int
  usuarioActualizacion   Usuario @relation("UsuarioEstablecimiento", fields: [usuarioActualizacionId], references: [id])
}

enum Rol {
  ADMIN
  AUXILIAR
}

enum Estado {
  ACTIVO
  INACTIVO
}
